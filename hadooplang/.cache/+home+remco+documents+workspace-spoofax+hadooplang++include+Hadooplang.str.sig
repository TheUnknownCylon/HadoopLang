Module("Hadooplang",[Signature([Constructors([OpDecl("IfElse",FunType([ConstType(SortNoArgs("Block"))],ConstType(SortNoArgs("IfElse")))),OpDecl("If",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Block")),ConstType(Sort("Option",[SortNoArgs("IfElse")]))],ConstType(SortNoArgs("If")))),OpDecl("ForKeyDef",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("ForKeyDef")))),OpDecl("ForloopDict",FunType([ConstType(SortNoArgs("ForKeyDef")),ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("LoopBlock"))],ConstType(SortNoArgs("LoopStatement")))),OpDecl("ForloopSet",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("LoopBlock"))],ConstType(SortNoArgs("LoopStatement")))),OpDecl("ForloopDict",FunType([ConstType(SortNoArgs("ForKeyDef")),ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("LoopBlock"))],ConstType(SortNoArgs("LoopStatement")))),OpDecl("ForloopSet",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("LoopBlock"))],ConstType(SortNoArgs("LoopStatement")))),OpDecl("loopblock",FunType([ConstType(SortNoArgs("Block"))],ConstType(SortNoArgs("LoopBlock")))),OpDecl("MapReduceKey",FunType([ConstType(SortNoArgs("Type")),ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("MRKey")))),OpDecl("RewriterAlias",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("RewriterParameter")),ConstType(Sort("List",[SortNoArgs("CommaParameter")])),ConstType(Sort("List",[SortNoArgs("JAVACLASS")])),ConstType(SortNoArgs("Type"))],ConstType(SortNoArgs("Rewriter")))),OpDecl("Rewriter",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("RewriterParameter")),ConstType(Sort("List",[SortNoArgs("CommaParameter")])),ConstType(SortNoArgs("BlockReturn"))],ConstType(SortNoArgs("Rewriter")))),OpDecl("RedInner",FunType([ConstType(SortNoArgs("MRKey")),ConstType(SortNoArgs("ReduceIterator")),ConstType(SortNoArgs("BlockMR"))],ConstType(SortNoArgs("RedInner")))),OpDecl("MapInner",FunType([ConstType(SortNoArgs("MRKey")),ConstType(SortNoArgs("Parameter")),ConstType(SortNoArgs("BlockMR"))],ConstType(SortNoArgs("MapInner")))),OpDecl("Reducer",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("RedInner"))],ConstType(SortNoArgs("Reducer")))),OpDecl("Mapper",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("MapInner"))],ConstType(SortNoArgs("Mapper")))),OpDecl("ReduceIterator",FunType([ConstType(SortNoArgs("Type")),ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("ReduceIterator")))),OpDecl("Parameter",FunType([ConstType(SortNoArgs("Type")),ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("CommaParameter")))),OpDecl("Parameter",FunType([ConstType(SortNoArgs("Type")),ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("Parameter")))),OpDecl("RewriterParameter",FunType([ConstType(SortNoArgs("Type")),ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("RewriterParameter")))),OpDecl("BlockReturn",FunType([ConstType(Sort("List",[SortNoArgs("Statement")])),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("BlockReturn")))),OpDecl("BlockMR",FunType([ConstType(Sort("List",[SortNoArgs("MapReduceStatement")]))],ConstType(SortNoArgs("BlockMR")))),OpDecl("Block",FunType([ConstType(Sort("List",[SortNoArgs("Statement")]))],ConstType(SortNoArgs("Block")))),OpDecl("MRReducer",FunType([ConstType(SortNoArgs("ReducerRef"))],ConstType(SortNoArgs("MRReducer")))),OpDecl("MRMapper",FunType([ConstType(SortNoArgs("MapperRef"))],ConstType(SortNoArgs("MRMapper")))),OpDecl("MRInputSet",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("MRInput")))),OpDecl("MRInputMethod",FunType([ConstType(SortNoArgs("ID")),ConstType(Sort("List",[SortNoArgs("Exp")]))],ConstType(SortNoArgs("MRInput")))),OpDecl("MapReduceChain",FunType([ConstType(SortNoArgs("MRInput")),ConstType(SortNoArgs("MRMapper")),ConstType(SortNoArgs("MRReducer"))],ConstType(SortNoArgs("MapReduceChain")))),OpDecl("loop",FunType([ConstType(SortNoArgs("LoopStatement"))],ConstType(SortNoArgs("Statement")))),OpDeclInj(FunType([ConstType(SortNoArgs("If"))],ConstType(SortNoArgs("Statement")))),OpDecl("ListDictSetItem",FunType([ConstType(SortNoArgs("DictAccess")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Statement")))),OpDecl("ListAddItem",FunType([ConstType(SortNoArgs("DatasetRef")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Statement")))),OpDecl("DatasetSetVar",FunType([ConstType(SortNoArgs("DatasetRef")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Statement")))),OpDecl("DatasetDefStatement",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Statement")))),OpDecl("write",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Statement")))),OpDeclInj(FunType([ConstType(SortNoArgs("Statement"))],ConstType(SortNoArgs("MapReduceStatement")))),OpDeclInj(FunType([ConstType(SortNoArgs("Reducer"))],ConstType(SortNoArgs("RootStatement")))),OpDeclInj(FunType([ConstType(SortNoArgs("Mapper"))],ConstType(SortNoArgs("RootStatement")))),OpDeclInj(FunType([ConstType(SortNoArgs("Rewriter"))],ConstType(SortNoArgs("RootStatement")))),OpDecl("Store",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("RootStatement")))),OpDecl("DatasetDef",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("MapReduceChain"))],ConstType(SortNoArgs("RootStatement")))),OpDecl("MapperRef",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("MapperRef")))),OpDecl("RewriteRef",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("RewriteRef")))),OpDecl("ReducerRef",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("ReducerRef")))),OpDecl("OneImportRewriter",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("RewriteRef"))],ConstType(SortNoArgs("ImportPart")))),OpDecl("OneImportReducer",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("ReducerRef"))],ConstType(SortNoArgs("ImportPart")))),OpDecl("OneImportMapper",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("MapperRef"))],ConstType(SortNoArgs("ImportPart")))),OpDecl("Import",FunType([ConstType(SortNoArgs("ImportPart"))],ConstType(SortNoArgs("Import")))),OpDecl("Module",FunType([ConstType(SortNoArgs("ID")),ConstType(Sort("List",[SortNoArgs("Import")])),ConstType(Sort("List",[SortNoArgs("RootStatement")]))],ConstType(SortNoArgs("Start")))),OpDecl("Params",ConstType(SortNoArgs("Params"))),OpDecl("Params",FunType([ConstType(Sort("List",[SortNoArgs("Exp")]))],ConstType(SortNoArgs("Params")))),OpDecl("DictItem",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("DictItem")))),OpDecl("DictAccess",FunType([ConstType(SortNoArgs("DatasetRef")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("DictAccess")))),OpDecl("DatasetRef",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("DatasetRef")))),OpDecl("Rewrite",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("RewriteRef")),ConstType(SortNoArgs("Params"))],ConstType(SortNoArgs("Exp")))),OpDecl("EqGreaterThan",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("EqSmallerThan",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("SmallerThan",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("GreaterThan",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("Equals",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("Or",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("And",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("Modulo",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("Divide",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("Min",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("Times",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("Plus",FunType([ConstType(SortNoArgs("Exp")),ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("Brackets",FunType([ConstType(SortNoArgs("Exp"))],ConstType(SortNoArgs("Exp")))),OpDecl("ExpDictaccess",FunType([ConstType(SortNoArgs("DictAccess"))],ConstType(SortNoArgs("Exp")))),OpDecl("List",FunType([ConstType(SortNoArgs("Type")),ConstType(Sort("List",[SortNoArgs("Exp")]))],ConstType(SortNoArgs("Exp")))),OpDecl("Dict",FunType([ConstType(SortNoArgs("Type")),ConstType(Sort("List",[SortNoArgs("DictItem")]))],ConstType(SortNoArgs("Exp")))),OpDecl("False",ConstType(SortNoArgs("Exp"))),OpDecl("True",ConstType(SortNoArgs("Exp"))),OpDeclInj(FunType([ConstType(SortNoArgs("DatasetRef"))],ConstType(SortNoArgs("Exp")))),OpDecl("String",FunType([ConstType(SortNoArgs("STRING"))],ConstType(SortNoArgs("Exp")))),OpDecl("Num",FunType([ConstType(SortNoArgs("NUM"))],ConstType(SortNoArgs("Exp")))),OpDecl("TypeIterator",FunType([ConstType(SortNoArgs("Type"))],ConstType(SortNoArgs("Type")))),OpDecl("TypeList",FunType([ConstType(SortNoArgs("Type"))],ConstType(SortNoArgs("Type")))),OpDecl("TypeDict",FunType([ConstType(SortNoArgs("Type"))],ConstType(SortNoArgs("Type")))),OpDecl("TypeBoolean",ConstType(SortNoArgs("Type"))),OpDecl("TypeNum",ConstType(SortNoArgs("Type"))),OpDecl("TypeString",ConstType(SortNoArgs("Type"))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("STRING")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("JAVACLASS")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("NUM")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("ID"))))])]),Signature([Constructors([OpDecl("Some",FunType([ConstType(SortVar("a"))],ConstType(Sort("Option",[SortVar("a")])))),OpDecl("None",ConstType(Sort("Option",[SortVar("a")])))])]),Signature([Constructors([OpDecl("Cons",FunType([ConstType(SortVar("a")),ConstType(Sort("List",[SortVar("a")]))],ConstType(Sort("List",[SortVar("a")])))),OpDecl("Nil",ConstType(Sort("List",[SortVar("a")]))),OpDecl("Conc",FunType([ConstType(Sort("List",[SortVar("a")])),ConstType(Sort("List",[SortVar("a")]))],ConstType(Sort("List",[SortVar("a")]))))])])])