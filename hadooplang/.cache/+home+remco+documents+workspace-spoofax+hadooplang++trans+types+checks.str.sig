Module("trans/types/checks",[Imports([(),(),(),(),(),(),(),(),()]),Rules([SDefT("typecheck",[],[VarDec("typetocheckfor",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("constraint-error",[],[],[])]),Rules([SDefT("constraint-error",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[]),SDefT("constraint-error-op",[],[],[])]),Rules([SDefT("constraint-error",[],[],[]),SDefT("mrchaincheck",[],[VarDec("x",ConstType(SortNoArgs("ATerm")))],[]),SDefT("mrchaincheck",[],[VarDec("inputtype",ConstType(SortNoArgs("ATerm")))],[]),SDefT("mrchaincheck",[],[VarDec("inputtype",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("write-to-rewriter-error",[],[],[]),SDefT("constraint-error",[],[],[])]),Rules([SDefT("rewriter-main-type",[],[],[]),SDefT("rewriter-main-type",[],[],[]),SDefT("rewriter-params",[],[],[]),SDefT("rewriter-params",[],[],[]),SDefT("rewriter-number-of-args",[],[],[]),SDefT("rewriter-number-of-args",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("rewriter-params-typecheckhelper",[],[VarDec("x",ConstType(SortNoArgs("ATerm")))],[]),SDefT("rewriter-params-typecheckhelper",[],[VarDec("paramtypes",ConstType(SortNoArgs("ATerm")))],[])]),Rules([SDefT("constraint-warning",[],[],[])]),Rules([SDefT("write-error-rewrite",[],[],[]),SDefT("write-value",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("valid_writetype",[],[],[]),SDefT("write-all-of-same-type-errors",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("check-write-statements",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[])]),Rules([SDefT("constraint-error",[],[],[])]),Rules([SDefT("constraint-error",[],[],[])]),Rules([SDefT("constraint-error",[],[],[]),SDefT("dict-item-value-to-error",[],[VarDec("expectedtype",ConstType(SortNoArgs("ATerm")))],[]),SDefT("list-item-value-to-error",[],[VarDec("expectedtype",ConstType(SortNoArgs("ATerm")))],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[])]),Rules([SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("extra-index-hook",[],[],[]),SDefT("fake-use",[],[],[]),SDefT("constraint-note",[],[],[])]),Rules([SDefT("validate_both_sides",[],[VarDec("comptype",ConstType(SortNoArgs("ATerm")))],[]),SDefT("validate_both_sides",[],[VarDec("comptypes",ConstType(SortNoArgs("ATerm")))],[]),SDefT("validate_both_sides",[],[VarDec("comptypes",ConstType(SortNoArgs("ATerm")))],[]),SDefT("validate_both_sides",[],[VarDec("comptypes",ConstType(SortNoArgs("ATerm")))],[])])])