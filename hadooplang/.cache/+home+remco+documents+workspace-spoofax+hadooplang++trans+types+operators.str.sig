Module("trans/types/operators",[Imports([(),()]),Signature([Constructors([OpDecl("OpExp",FunType([ConstType(SortNoArgs("OpType")),ConstType(SortVar("a")),ConstType(SortVar("b"))],ConstType(SortNoArgs("OpExp")))),OpDecl("OpPlus",ConstType(SortNoArgs("OPType"))),OpDecl("OpMin",ConstType(SortNoArgs("OpType"))),OpDecl("OpTimes",ConstType(SortNoArgs("OpType"))),OpDecl("OpDivide",ConstType(SortNoArgs("OpType"))),OpDecl("OpModulo",ConstType(SortNoArgs("OpType"))),OpDecl("OpAnd",ConstType(SortNoArgs("OpType"))),OpDecl("OpOr",ConstType(SortNoArgs("OpType"))),OpDecl("OpGreaterThan",ConstType(SortNoArgs("OpType"))),OpDecl("OpSmallerThan",ConstType(SortNoArgs("OpType"))),OpDecl("OpEqSmallerThan",ConstType(SortNoArgs("OpType"))),OpDecl("OpEqGreaterThan",ConstType(SortNoArgs("OpType"))),OpDecl("OpEquals",ConstType(SortNoArgs("OpType")))])]),Rules([SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[])]),Rules([SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[]),SDefT("type-of-op",[],[],[])]),Rules([SDefT("type-of-op",[],[],[])]),Rules([SDefT("type-both",[],[VarDec("desiredtype",ConstType(SortNoArgs("ATerm")))],[]),SDefT("type-oneshouldbeXotherY",[],[VarDec("desiredtypeA",ConstType(SortNoArgs("ATerm"))),VarDec("desiredtypeB",ConstType(SortNoArgs("ATerm")))],[])])])