Module("lib/compilation-library.generated",[Imports([Import("libstratego-lib"),Import("lib/editor-common.generated"),Import("lib/index-library.generated"),Import("lib/analysis-library.generated"),Import("lib/analysis-library-internal.generated")]),Rules([SDefNoArgs("index-desugar-ast",Fail),SDefT("index-compile-ast",[],[DefaultVarDec("file"),DefaultVarDec("subfile")],Fail)]),Rules([RDefNoArgs("index-schedule-compilation",Rule(Wld,NoAnnoList(Op("None",[])),[WithClause(CallT(SVar("queue-strategy"),[],[NoAnnoList(Str("\"index-compilation\"")),NoAnnoList(Str("\"Compiling files\""))]))])),RDefNoArgs("index-compilation",Rule(Var("language"),NoAnnoList(Op("None",[])),[WithClause(Seq(Assign(Var("project-path"),RootApp(CallNoArgs(SVar("project-path")))),CallT(SVar("index-setup"),[],[Var("language"),NoAnnoList(List([Var("project-path")])),NoAnnoList(Str("\".\""))]))),WithClause(Seq(Assign(Var("diffs"),RootApp(CallNoArgs(SVar("analyze-get-compilediffs")))),Seq(Assign(Var("files"),App(Call(SVar("map"),[CallNoArgs(SVar("index-compilation-restore-read-file"))]),Var("diffs"))),Seq(Assign(Var("filteredFiles"),App(CallNoArgs(SVar("make-set")),App(Call(SVar("remove-all"),[CallNoArgs(SVar("index-compilation-filter-file"))]),Var("files")))),Seq(BA(Call(SVar("filter"),[CallNoArgs(SVar("index-compilation-clean-reads"))]),Var("filteredFiles")),Seq(BA(CallNoArgs(SVar("set-total-work-units")),App(CallNoArgs(SVar("length")),Var("filteredFiles"))),BA(Call(SVar("filter"),[Seq(CallT(SVar("index-compilation-file"),[],[Var("language"),Var("project-path")]),CallNoArgs(SVar("complete-work-unit")))]),Var("filteredFiles"))))))))])),RDefT("index-compilation-file",[],[DefaultVarDec("language"),DefaultVarDec("project-path")],Rule(NoAnnoList(Tuple([Var("path"),Var("subfile")])),NoAnnoList(Op("None",[])),[WithClause(Seq(Assign(Var("ast"),RootApp(CallT(SVar("index-get-global"),[],[App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([App(CallNoArgs(SVar("index-file-to-uri")),NoAnnoList(Tuple([Var("path"),Var("subfile")]))),NoAnnoList(List([NoAnnoList(Str("\"ast\""))]))])))]))),DynRuleScope([DynRuleScopeId("Index-ReadSet")],Seq(Assign(Var("readSet"),RootApp(CallNoArgs(SVar("new-iset")))),Seq(GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("Index-ReadSet")),RuleNoCond(Wld,Var("readSet")))]),Seq(BA(Call(SVar("try"),[CallT(SVar("index-compile-ast"),[],[Var("path"),Var("subfile")])]),Var("ast")),Seq(Assign(Var("reads"),App(CallNoArgs(SVar("iset-elements")),Var("readSet"))),BA(CallT(SVar("index-add-all"),[],[App(CallNoArgs(SVar("index-compilation-file-tuple")),NoAnnoList(Tuple([Var("path"),Var("subfile")])))]),Var("reads")))))))))])),RDefNoArgs("index-compilation-filter-file",Rule(NoAnnoList(Tuple([Var("file"),Var("subfile")])),NoAnnoList(Tuple([Var("file"),Var("subfile")])),BA(LChoice(CallNoArgs(SVar("is-test-file")),LChoice(CallNoArgs(SVar("index-is-fake-file")),Not(CallNoArgs(SVar("file-exists"))))),Var("file"))))]),Rules([RDefNoArgs("commit-and-compile",Rule(Var("language"),NoAnnoList(Op("None",[])),[WithClause(CallNoArgs(SVar("index-commit"))),WithClause(CallNoArgs(SVar("index-schedule-compilation")))])),RDefNoArgs("trigger-commit-and-compile",Rule(Var("language"),RootApp(Id),[WithClause(CondChoice(Not(CallT(SVar("index-is-global-enabled"),[],[NoAnnoList(Str("\"delay-compile\""))])),CallNoArgs(SVar("commit-and-compile")),CallT(SVar("index-enable-global"),[],[NoAnnoList(Str("\"trigger-compile\""))])))])),SDefNoArgs("disable-commit-and-compile",CallT(SVar("index-enable-global"),[],[NoAnnoList(Str("\"delay-compile\""))])),RDefNoArgs("enable-commit-and-compile",Rule(Var("language"),RootApp(Id),[WithClause(Seq(IfThen(CallT(SVar("index-is-global-enabled"),[],[NoAnnoList(Str("\"trigger-compile\""))]),CallNoArgs(SVar("commit-and-compile"))),CallT(SVar("index-disable-global"),[],[NoAnnoList(Str("\"delay-compile\""))])))]))]),Rules([RDefNoArgs("index-compilation-restore-read-file",Rule(NoAnnoList(Tuple([Var("file"),Var("subfile")])),NoAnnoList(Tuple([Var("file'"),Var("subfile")])),Assign(Var("file'"),App(CallT(SVar("string-replace"),[],[RootApp(CallNoArgs(SVar("index-compilation-read-path"))),NoAnnoList(Str("\"\""))]),Var("file"))))),RDefNoArgs("index-compilation-restore-read-file",Rule(NoAnnoList(Tuple([Var("file"),Var("subfile")])),NoAnnoList(Tuple([Var("file"),Var("subfile")])),Not(BA(CallT(SVar("string-replace"),[],[RootApp(CallNoArgs(SVar("index-compilation-read-path"))),NoAnnoList(Str("\"\""))]),Var("file"))))),SDefNoArgs("index-compilation-clean-reads",Seq(Match(NoAnnoList(Tuple([Var("file"),Var("subfile")]))),Seq(CallNoArgs(SVar("index-compilation-file-tuple")),CallNoArgs(SVar("index-clear-file"))))),RDefNoArgs("index-compilation-file-tuple",RuleNoCond(NoAnnoList(Tuple([Var("file"),Var("subfile")])),NoAnnoList(Tuple([NoAnnoList(StringQuotation1("                          ",[StringEscape1("                          ",RootApp(CallNoArgs(SVar("index-compilation-read-path")))),QStr("/"),StringEscape1("                                                          ",Var("file"))])),Var("subfile")])))),SDefNoArgs("index-compilation-read-path",Build(NoAnnoList(Str("\"/.internal/reads/compile\""))))])])