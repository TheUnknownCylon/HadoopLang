Module("hadooplang",[Imports([Import("libstratego-lib"),Import("libstratego-gpp"),Import("libstratego-aterm"),Import("include/Hadooplang"),Import("lib/editor-common.generated"),Import("lib/analysis-auto.generated"),Import("lib/index-library.generated"),Import("lib/analysis-library.generated"),Import("lib/analysis-library-internal.generated"),Import("lib/compilation-library.generated"),Import("trans/desugar/desugar"),Import("trans/index"),Import("trans/check"),Import("trans/types/checks"),Import("trans/hover")]),Rules([RDefNoArgs("analyze",Rule(NoAnnoList(Tuple([Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("ast''"),Var("errors"),Var("warnings"),Var("notes"),Var("filesToAnalyze'")])),[WithClause(Seq(Assign(Var("ast'"),App(CallNoArgs(SVar("desugar-all")),Var("ast"))),Seq(Assign(NoAnnoList(Tuple([Var("ast''"),Var("filesToAnalyze")])),App(CallT(SVar("analyze-top"),[],[RootApp(CallNoArgs(SVar("language")))]),NoAnnoList(Tuple([Var("ast'"),Var("path"),Var("project-path")])))),Seq(Call(SVar("index-transaction"),[Seq(BA(Call(SVar("collect-all"),[CallNoArgs(SVar("extra-index-hook")),CallNoArgs(SVar("conc"))]),Var("ast''")),Seq(Assign(Var("errors"),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-error")),CallNoArgs(SVar("conc"))]),Var("ast''"))),Seq(Assign(Var("warnings"),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-warning")),CallNoArgs(SVar("conc"))]),Var("ast''"))),Assign(Var("notes"),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-note")),CallNoArgs(SVar("conc"))]),Var("ast''"))))))]),Assign(Var("filesToAnalyze'"),App(CallNoArgs(SVar("make-set")),App(Call(SVar("map"),[CallNoArgs(SVar("index-filepair-to-file"))]),Var("filesToAnalyze"))))))))])),RDefNoArgs("index-desugar-ast",RuleNoCond(Var("ast"),App(CallNoArgs(SVar("desugar-all")),Var("ast")))),SDefNoArgs("desugar-all",Call(SVar("innermost"),[CallNoArgs(SVar("desugar"))])),RDefNoArgs("constraint-error",RuleNoCond(Wld,RootApp(Fail))),RDefNoArgs("constraint-warning",RuleNoCond(Wld,RootApp(Fail))),RDefNoArgs("constraint-note",RuleNoCond(Wld,RootApp(Fail))),RDefNoArgs("desugar",RuleNoCond(Wld,RootApp(Fail))),RDefNoArgs("hover-text",RuleNoCond(Wld,RootApp(Fail))),RDefNoArgs("editor-analyze",Rule(NoAnnoList(Tuple([Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("ast'"),Var("errors"),Var("warnings"),Var("notes")])),[WithClause(Seq(CallNoArgs(SVar("editor-init")),Seq(Assign(NoAnnoList(Tuple([Var("ast'"),Var("errors"),Var("warnings"),Var("notes"),Var("filesToAnalyze")])),App(CallNoArgs(SVar("analyze")),NoAnnoList(Tuple([Var("ast"),Var("path"),Var("project-path")])))),BA(Call(SVar("try"),[CallNoArgs(SVar("editor-queue-analysis"))]),Var("filesToAnalyze")))))])),RDefNoArgs("editor-analyze",Rule(Var("files"),NoAnnoList(Op("None",[])),[WhereClause(Not(CallNoArgs(SVar("is-tuple")))),WithClause(Seq(CallT(SVar("index-setup"),[],[RootApp(CallNoArgs(SVar("language"))),NoAnnoList(List([RootApp(CallNoArgs(SVar("project-path")))])),NoAnnoList(Str("\".\""))]),CallNoArgs(SVar("disable-commit-and-compile")))),WithClause(CallNoArgs(SVar("editor-queue-analysis"))),WithClause(Seq(BA(CallNoArgs(SVar("enable-commit-and-compile")),RootApp(CallNoArgs(SVar("language")))),BA(CallNoArgs(SVar("trigger-commit-and-compile")),RootApp(CallNoArgs(SVar("language"))))))])),RDefNoArgs("editor-save",Rule(As(Var("e"),NoAnnoList(Tuple([Wld,Wld,Wld,Wld,Wld]))),NoAnnoList(Op("None",[])),[WithClause(CallT(SVar("index-setup"),[],[RootApp(CallNoArgs(SVar("language"))),NoAnnoList(List([RootApp(CallNoArgs(SVar("project-path")))])),NoAnnoList(Str("\".\""))]))]))]),Rules([RDefNoArgs("editor-resolve",Rule(NoAnnoList(Tuple([Var("node"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),Var("target"),Seq(CallT(SVar("index-setup"),[],[RootApp(CallNoArgs(SVar("language"))),NoAnnoList(List([Var("project-path")])),NoAnnoList(StringQuotation1("                                                 ",[StringEscape1("                                                 ",Var("project-path")),QStr("/"),StringEscape1("                                                                ",Var("path"))]))]),Call(SVar("index-transaction"),[Assign(Var("target"),App(CallNoArgs(SVar("index-lookup")),Var("node")))])))),RDefNoArgs("editor-hover",RuleNoCond(NoAnnoList(Tuple([Var("target"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),App(CallNoArgs(SVar("hover-text")),Var("target")))),RDefNoArgs("editor-complete",Rule(NoAnnoList(Tuple([Var("node"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),Var("proposals'"),Seq(CallNoArgs(SVar("editor-init")),Seq(Assign(NoAnnoList(Tuple([Var("ast'"),Wld])),App(CallT(SVar("analyze-top"),[],[RootApp(CallNoArgs(SVar("language")))]),NoAnnoList(Tuple([Var("ast"),Var("path"),Var("project-path")])))),Seq(Assign(As(Var("item"),NoAnnoList(Op("COMPLETION",[Var("name")]))),App(Call(SVar("collect-one"),[Match(NoAnnoList(Op("COMPLETION",[Wld])))]),Var("ast'"))),Seq(Call(SVar("index-transaction"),[AM(LChoice(BA(CallT(SVar("index-lookup-all-levels"),[],[Var("name")]),Var("item")),Build(NoAnnoList(List([])))),Var("proposals"))]),Assign(Var("proposals'"),App(Call(SVar("map"),[CallNoArgs(SVar("index-uri-name"))]),Var("proposals")))))))))]),Rules([RDefNoArgs("generate-aterm",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"aterm\""))]),Var("path"))),Assign(Var("result"),Var("selected"))))])),RDefNoArgs("generate-analyzed",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallNoArgs(SVar("editor-init")),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"analyzed.aterm\""))]),Var("path"))),Assign(Var("result"),App(CallT(SVar("analyze-top"),[],[RootApp(CallNoArgs(SVar("language")))]),NoAnnoList(Tuple([Var("selected"),Var("path"),Var("project-path")])))))))])),RDefNoArgs("generate-deffed",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[RootApp(CallNoArgs(SVar("language"))),NoAnnoList(List([Var("project-path")])),NoAnnoList(StringQuotation1("                                                 ",[StringEscape1("                                                 ",Var("project-path")),QStr("/"),StringEscape1("                                                                ",Var("path"))]))]),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"aterm\""))]),Var("path"))),Assign(Var("result"),App(CallT(SVar("analyze-defs"),[],[NoAnnoList(Op("Anon",[])),NoAnnoList(Op("Anon",[]))]),Var("selected"))))))])),RDefNoArgs("index-currentfile",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[RootApp(CallNoArgs(SVar("language"))),NoAnnoList(List([Var("project-path")])),NoAnnoList(StringQuotation1("                                                 ",[StringEscape1("                                                 ",Var("project-path")),QStr("/"),StringEscape1("                                                                ",Var("path"))]))]),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"index.currentfile.aterm\""))]),Var("path"))),Assign(Var("result"),App(CallNoArgs(SVar("index-get-all-in-file")),Var("path"))))))])),RDefNoArgs("index-allfiles",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(CallT(SVar("index-setup"),[],[RootApp(CallNoArgs(SVar("language"))),NoAnnoList(List([Var("project-path")])),NoAnnoList(StringQuotation1("                                                 ",[StringEscape1("                                                 ",Var("project-path")),QStr("/"),StringEscape1("                                                                ",Var("path"))]))]),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"index.allfiles.aterm\""))]),Var("path"))),Assign(Var("result"),App(Call(SVar("map"),[LRule(RuleNoCond(Var("filename"),NoAnnoList(Tuple([Var("filename"),App(CallNoArgs(SVar("index-get-all-in-file")),Var("filename"))]))))]),RootApp(CallNoArgs(SVar("index-get-all-files"))))))))])),RDefNoArgs("index-cleanall",Rule(NoAnnoList(Tuple([Var("selected"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Op("None",[])),[WithClause(Seq(CallT(SVar("index-setup"),[],[RootApp(CallNoArgs(SVar("language"))),NoAnnoList(List([Var("project-path")])),NoAnnoList(StringQuotation1("                                                 ",[StringEscape1("                                                 ",Var("project-path")),QStr("/"),StringEscape1("                                                                ",Var("path"))]))]),CallNoArgs(SVar("index-clear"))))]))]),Rules([SDefNoArgs("editor-queue-analysis",Seq(Not(Match(NoAnnoList(List([])))),CallT(SVar("queue-strategy"),[],[NoAnnoList(Str("\"editor-parallel-analyze\"")),NoAnnoList(Str("\"Analyzing files\""))]))),RDefNoArgs("editor-parallel-analyze",Rule(Var("files"),NoAnnoList(Op("None",[])),[WithClause(Call(SVar("index-parallel-analyze-files"),[CallNoArgs(SVar("analyze"))]))]))])])