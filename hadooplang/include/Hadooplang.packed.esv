Module("Hadooplang.main.packed",Imports([Import("Hadooplang.main"),Import("Hadooplang-Builders"),Import("Hadooplang-Colorer"),Import("Hadooplang-Completions"),Import("Hadooplang-Folding"),Import("Hadooplang-Outliner"),Import("Hadooplang-References"),Import("Hadooplang-Syntax"),Import("Hadooplang-Builders.generated"),Import("Hadooplang-Colorer.generated"),Import("Hadooplang-Completions.generated"),Import("Hadooplang-Folding.generated"),Import("Hadooplang-References.generated"),Import("Hadooplang-Syntax.generated")]),[Language(" General properties",[LanguageName("Hadooplang"),LanguageId("hadooplang"),Extends(Values(["Root"])),Description(String("\"Spoofax/IMP-generated editor for the Hadooplang language\"")),URL("http://strategoxt.org"),Extensions(Values(["hdp"])),Table("include/Hadooplang.tbl"),StartSymbols([Sort("Start")])]),Builders("",[SemanticProvider("include/hadooplang.ctree"),SemanticProvider("include/hadooplang-java.jar"),SemanticObserver(Strategy("editor-analyze"),[]),Builder(String("\"Generate Java code\""),Strategy("generate-java"),[OpenEditor,RealTime]),Builder(String("\"Compile to 'output.jar'\""),Strategy("compile-java"),[OpenEditor,RealTime]),Builder(String("\"Show abstract syntax (for selection)\""),Strategy("generate-aterm"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show analyzed abstract syntax (for selection)\""),Strategy("generate-analyzed"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show index entries for current file\""),Strategy("index-currentfile"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Show index entries for all files\""),Strategy("index-allfiles"),[OpenEditor,RealTime,Meta,Source]),Builder(String("\"Clear index\""),Strategy("index-cleanall"),[Meta,Source])]),Refactorings("",[PrettyPrint(Strategy("pp-hadooplang-string")),Refactoring([Sort("ID")],String("\"Rename Entity\""),Strategy("rename-entity"),[Source,Cursor],[Shortcut(InteractionId(String("\"org.eclipse.jdt.ui.edit.text.java.rename.element\""))),UserInput([IdInputField(String("\"new name\""),String("\"\""))])]),OnSave(Strategy("editor-save"),None)]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Token(TK_IDENTIFIER),AttributeRef("default")),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("63","127","95"),NoColor,ITALIC))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Completions("",[CompletionTemplateEx([Sort("Start")],NoCompletionPrefix,[String("\"module \""),Placeholder("<m>")],[Blank])]),Completions("",[CompletionProposer(Strategy("editor-complete")),CompletionTrigger(String("\":\""),None)]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("Start"),Constructor("Module")),None),FoldRule(SortAndConstructor(Sort("MRInput"),Constructor("MRInputMethod")),None),FoldRule(SortAndConstructor(Sort("Rewriter"),Constructor("Rewriter")),None),FoldRule(SortAndConstructor(Sort("BlockReturn"),Constructor("BlockReturn")),None),FoldRule(SortAndConstructor(Sort("Rewriter"),Constructor("RewriterAlias")),None),FoldRule(SortAndConstructor(Sort("MapInner"),Constructor("MapInner")),None),FoldRule(SortAndConstructor(Sort("BlockMR"),Constructor("BlockMR")),None),FoldRule(SortAndConstructor(Sort("RedInner"),Constructor("RedInner")),None)]),Outliner("",[OutlineRule(SortAndConstructor(Sort("Start"),Constructor("Module"))),OutlineRule(Sort("Mapper")),OutlineRule(Sort("Reducer")),OutlineRule(Sort("Rewriter")),OutlineRule(ConstructorOnly(Constructor("If"))),OutlineRule(ConstructorOnly(Constructor("ForloopSet"))),OutlineRule(ConstructorOnly(Constructor("ForloopDict"))),OutlineRule(ConstructorOnly(Constructor("write"))),OutlineRule(ConstructorOnly(Constructor("return"))),OutlineRule(Sort("RootStatement"))]),References("",[ReferenceRule("_",Strategy("editor-resolve")),HoverRule("_",Strategy("editor-hover"))]),Language(" Syntax properties (static defaults)",[LineCommentPrefix(String("\"//\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))])])