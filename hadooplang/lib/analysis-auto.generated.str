module lib/analysis-auto.generated

signature
  constructors
    Datavar  : Namespace
    Import   : Namespace
    Module   : Namespace
    Dataset  : Namespace
    Mapper   : Namespace
    Reducer  : Namespace
    Rewriter : Namespace
    Datavar  : Namespace


imports
  lib/editor-common.generated
  include/Hadooplang


rules

  nam-annotate-names(|def-path):
    DatasetRef(d_13799) -> DatasetRef(<nam-annotate-use(|Datavar())> d_13799)

  nam-get-scope-types :
    Module(_, _, _) -> [ Dataset()
                       , Datavar()
                       , Import()
                       , Rewriter()
                       , Mapper()
                       , Reducer()
                       ]

  nam-get-scope-types :
    Block(_) -> [Dataset(), Datavar()]

  nam-get-scope-types :
    BlockMR(_) -> [ Dataset()
                  , Datavar()
                  , Mapper()
                  ]

  nam-get-scope-types :
    BlockReturn(_, _) -> [Dataset(), Datavar()]

  nam-get-scope-types :
    Mapper(_, _) -> [ Dataset()
                    , Datavar()
                    , Rewriter()
                    , Mapper()
                    , Reducer()
                    ]

  nam-get-scope-types :
    Reducer(_, _) -> [ Dataset()
                     , Datavar()
                     , Rewriter()
                     , Mapper()
                     , Reducer()
                     ]

  nam-get-scope-types :
    MapInner(_, _, _) -> [ Dataset()
                         , Datavar()
                         , Rewriter()
                         , Mapper()
                         , Reducer()
                         ]

  nam-get-scope-types :
    RedInner(_, _, _) -> [ Dataset()
                         , Datavar()
                         , Rewriter()
                         , Mapper()
                         , Reducer()
                         ]

  nam-get-scope-types :
    Rewriter(_, _) -> [ Dataset()
                      , Datavar()
                      , Rewriter()
                      , Mapper()
                      , Reducer()
                      ]

  nam-get-scope-types :
    RewriterInner(_, _, _) -> [ Dataset()
                              , Datavar()
                              , Rewriter()
                              , Mapper()
                              , Reducer()
                              ]

  nam-get-scope-types :
    RewriterInnerAlias(_, _, _, _) -> [ Dataset()
                                      , Datavar()
                                      , Rewriter()
                                      , Mapper()
                                      , Reducer()
                                      ]

  nam-get-scope-types :
    loop(_) -> [Dataset(), Datavar()]

  nam-get-scope-types :
    loopblock(_) -> [Dataset(), Datavar()]

  nam-get-scope-types :
    ForloopSet(_, _, _) -> [Dataset(), Datavar()]

  nam-get-scope-types :
    ForloopDict(_, _, _, _) -> [Dataset(), Datavar()]

  nam-get-scope-types :
    ForloopSet(_, _, _, _) -> [Dataset(), Datavar()]

  nam-get-scope-types :
    ForloopDict(_, _, _, _, _) -> [Dataset(), Datavar()]

  nam-get-definition-key :
    Module(x, _, _) -> x

  nam-get-definition :
    Module(x, _, _) -> <nam-get-def(|Module())> x

  nam-get-definition-key :
    Import(x) -> x

  nam-get-definition :
    Import(x) -> <nam-get-def(|Import())> x

  nam-get-definition-key :
    DatasetDef(x, _) -> x

  nam-get-definition :
    DatasetDef(x, _) -> <nam-get-def(|Dataset())> x

  nam-get-definition-key :
    RewriterParameter(_, x) -> x

  nam-get-definition :
    RewriterParameter(_, x) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    Parameter(_, x) -> x

  nam-get-definition :
    Parameter(_, x) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    ReduceIterator(_, x) -> x

  nam-get-definition :
    ReduceIterator(_, x) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    Mapper(x, _) -> x

  nam-get-definition :
    Mapper(x, _) -> <nam-get-def(|Mapper())> x

  nam-get-definition-key :
    Reducer(x, _) -> x

  nam-get-definition :
    Reducer(x, _) -> <nam-get-def(|Reducer())> x

  nam-get-definition-key :
    Rewriter(x, _) -> x

  nam-get-definition :
    Rewriter(x, _) -> <nam-get-def(|Rewriter())> x

  nam-get-definition-key :
    MapReduceKey(_, x) -> x

  nam-get-definition :
    MapReduceKey(_, x) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    DatasetDefStatement(x, _) -> x

  nam-get-definition :
    DatasetDefStatement(x, _) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    ForloopSet(x, _, _) -> x

  nam-get-definition :
    ForloopSet(x, _, _) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    ForloopDict(_, x, _, _) -> x

  nam-get-definition :
    ForloopDict(_, x, _, _) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    ForloopSet(x, _, _, _) -> x

  nam-get-definition :
    ForloopSet(x, _, _, _) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    ForloopDict(_, x, _, _, _) -> x

  nam-get-definition :
    ForloopDict(_, x, _, _, _) -> <nam-get-def(|Datavar())> x

  nam-get-definition-key :
    ForKeyDef(x) -> x

  nam-get-definition :
    ForKeyDef(x) -> <nam-get-def(|Datavar())> x

  nam-annotate-names(|def-path):
    Module(f_13796, g_13796, h_13796) -> Module(f_13796{def-path}, g_13796, h_13796)

  nam-annotate-names(|def-path):
    Import(e_13796) -> Import(e_13796{def-path})

  nam-annotate-names(|def-path):
    OneImportMapper(c_13796, d_13796) -> OneImportMapper(
                                           <nam-annotate-use(|Module())> c_13796
                                         , d_13796
                                         )

  nam-annotate-names(|def-path):
    OneImportReducer(a_13796, b_13796) -> OneImportReducer(
                                            <nam-annotate-use(|Module())> a_13796
                                          , b_13796
                                          )

  nam-annotate-names(|def-path):
    OneImportRewriter(y_13795, z_13795) -> OneImportRewriter(
                                             <nam-annotate-use(|Module())> y_13795
                                           , z_13795
                                           )

  nam-annotate-names(|def-path):
    ReducerRef(x_13795) -> ReducerRef(<nam-annotate-use(|Reducer())> x_13795)

  nam-annotate-names(|def-path):
    RewriteRef(w_13795) -> RewriteRef(<nam-annotate-use(|Rewriter())> w_13795)

  nam-annotate-names(|def-path):
    MapperRef(v_13795) -> MapperRef(<nam-annotate-use(|Mapper())> v_13795)

  nam-annotate-names(|def-path):
    DatasetDef(q_13795, r_13795) -> DatasetDef(q_13795{def-path}, r_13795)

  nam-annotate-names(|def-path):
    Store(p_13795) -> Store(<nam-annotate-use(|Dataset())> p_13795)

  nam-annotate-names(|def-path):
    MRInputSet(h_13795) -> MRInputSet(<nam-annotate-use(|Dataset())> h_13795)

  nam-annotate-names(|def-path):
    RewriterParameter(z_13794, a_13795) -> RewriterParameter(z_13794, a_13795{def-path})

  nam-annotate-names(|def-path):
    Parameter(x_13794, y_13794) -> Parameter(x_13794, y_13794{def-path})

  nam-annotate-names(|def-path):
    Parameter(v_13794, w_13794) -> Parameter(v_13794, w_13794{def-path})

  nam-annotate-names(|def-path):
    ReduceIterator(t_13794, u_13794) -> ReduceIterator(t_13794, u_13794{def-path})

  nam-annotate-names(|def-path):
    Mapper(r_13794, s_13794) -> Mapper(r_13794{def-path}, s_13794)

  nam-annotate-names(|def-path):
    Reducer(p_13794, q_13794) -> Reducer(p_13794{def-path}, q_13794)

  nam-annotate-names(|def-path):
    Rewriter(h_13794, i_13794) -> Rewriter(h_13794{def-path}, i_13794)

  nam-annotate-names(|def-path):
    MapReduceKey(y_13793, z_13793) -> MapReduceKey(y_13793, z_13793{def-path})

  nam-annotate-names(|def-path):
    DatasetDefStatement(w_13793, x_13793) -> DatasetDefStatement(w_13793{def-path}, x_13793)

  nam-annotate-names(|def-path):
    ForloopSet(l_13793, m_13793, n_13793) -> ForloopSet(l_13793{def-path}, m_13793, n_13793)

  nam-annotate-names(|def-path):
    ForloopDict(h_13793, i_13793, j_13793, k_13793) -> ForloopDict(h_13793, i_13793{def-path}, j_13793, k_13793)

  nam-annotate-names(|def-path):
    ForloopSet(d_13793, e_13793, f_13793, g_13793) -> ForloopSet(d_13793{def-path}, e_13793, f_13793, g_13793)

  nam-annotate-names(|def-path):
    ForloopDict(y_13792, z_13792, a_13793, b_13793, c_13793) -> ForloopDict(
                                                                  y_13792
                                                                , z_13792{def-path}
                                                                , a_13793
                                                                , b_13793
                                                                , c_13793
                                                                )

  nam-annotate-names(|def-path):
    ForKeyDef(x_13792) -> ForKeyDef(x_13792{def-path})

  nam-get-def(|n) =
    fail

  nam-annotate-use(|n) =
    fail