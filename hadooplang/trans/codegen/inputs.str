module trans/codegen/inputs

imports
  libstratego-lib
  include/Hadooplang
  lib/editor-common.generated
  lib/analysis-auto.generated
  lib/index-library.generated
  lib/analysis-library.generated
  lib/analysis-library-internal.generated

  trans/types/typeof
  trans/inputs/inputs
  
  trans/codegen/jobconf
  trans/codegen/statements
  trans/codegen/expressions

rules
     
     to-java-input-job(|jobname, args, config): DataInput("lines") -> (javacode, config)
        where
            [file] := args;
            javacode := $[
                FileInputFormat.setInputPaths([jobname], [<to-java> file]);
            ]
     
     
     to-java-input-job(|jobname, args, config): DataInput("keyvalue") -> (javacode, config')
        where
            [file,separator] := args;
            javacode := $[
                [jobname].setInputFormatClass(KeyValueTextInputFormat.class);
                KeyValueTextInputFormat.addInputPath([jobname], new Path([<to-java> file]));
            ];
            config' := <jobconfAddSetting(|config)> (String("\"key.value.separator.in.input.line\""), separator )
     
     
     to-java-input-job(|jobname, args, config): DataInput("xml") -> (javacode, config')
        where
            [file,opentag,closetag] := args;
            javacode := $[
                [jobname].setInputFormatClass(XMLInput.class);
                FileInputFormat.setInputPaths([jobname], [<to-java> file]);
            ];
            config'' := <jobconfAddSetting(|config)>  (String("\"xmlinput.start\""), opentag );
            config'  := <jobconfAddSetting(|config'')> (String("\"xmlinput.end\""),   closetag )
            
            